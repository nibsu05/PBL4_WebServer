@model PBL3.DTO.Shared.LoginDTO
@{
    ViewData["Title"] = "Đăng nhập";
    Layout = "~/Views/Shared/_Layout.cshtml"; // hoặc null nếu không dùng layout
}
<style>
    body {
        background-image: url('/images/home.jpg'); /* hoặc đổi tên ảnh nếu khác */
        background-size: cover;
        background-position: center;
        backdrop-filter: blur(3px);
        margin: 0;
        font-family: 'Segoe UI', sans-serif;
        height: 100vh;
    }

    .login-card {
        max-width: 400px;
        margin: 80px auto;
        background-color: rgba(20, 20, 20, 0.85);
        padding: 35px;
        border-radius: 15px;
        color: #fff;
        box-shadow: 0 8px 20px rgba(0,0,0,0.5);
    }

    .login-card h2 {
        text-align: center;
        margin-bottom: 25px;
        font-weight: 600;
        font-size: 24px;
    }

    .form-control {
        background-color: #2d2d2d;
        border: none;
        color: white;
        border-radius: 10px;
        margin-bottom: 20px;
        padding: 12px;
    }

    .form-control::placeholder {
        color: #ccc;
    }

    .btn-login {
        width: 100%;
        background: linear-gradient(to right, #00c853, #64dd17);
        border: none;
        padding: 12px;
        font-weight: bold;
        color: white;
        border-radius: 10px;
        transition: 0.3s ease;
    }

    .btn-login:hover {
        background: linear-gradient(to right, #00bfa5, #1de9b6);
    }

    .footer-text {
        text-align: center;
        margin-top: 20px;
        font-size: 0.9rem;
    }

    .footer-text a {
        color: #64dd17;
        text-decoration: none;
    }

    .footer-text a:hover {
        text-decoration: underline;
    }
</style>

<div class="login-card">
    <h2>Đăng nhập vào CDT Store</h2>

    @{
        var globalErrors = ViewData.ModelState[""]?.Errors;
    }
    @if (globalErrors != null && globalErrors.Count > 0)
    {
        <div class="text-danger" style="margin-bottom:16px;">
            @foreach (var error in globalErrors)
            {
                <div>@error.ErrorMessage</div>
            }
        </div>
    }

    <form asp-action="Login" method="post">
        <input type="hidden" name="returnUrl" value="@Context.Request.Query["returnUrl"]" />
        <input type="hidden" name="addToCartProductId" value="@Context.Request.Query["addToCartProductId"]" />
        <input type="hidden" name="addToCartQuantity" value="@Context.Request.Query["addToCartQuantity"]" />
        <input type="hidden" name="saveVoucherId" value="@Context.Request.Query["saveVoucherId"]" />
        <input type="hidden" name="sellerId" value="@Context.Request.Query["sellerId"]" />
        @{
            var accountError = ViewData.ModelState["Account"]?.Errors.FirstOrDefault()?.ErrorMessage;
            var passwordError = ViewData.ModelState["Password"]?.Errors.FirstOrDefault()?.ErrorMessage;
            string firstError = null;
            if (!string.IsNullOrEmpty(accountError))
            {
                firstError = accountError;
            }
            else if (!string.IsNullOrEmpty(passwordError))
            {
                firstError = passwordError;
            }
        }   
        <input asp-for="Username" class="form-control" placeholder="Tên đăng nhập hoặc Email" />
        @if (!string.IsNullOrEmpty(firstError) && !string.IsNullOrEmpty(accountError))
        {
            <span class="text-danger">@firstError</span>
        }

        <input asp-for="Password" class="form-control" placeholder="Mật khẩu" type="password" />
        @if (!string.IsNullOrEmpty(firstError) && !string.IsNullOrEmpty(passwordError) && string.IsNullOrEmpty(accountError))
        {
            <span class="text-danger">@firstError</span>
        }

        <button type="submit" class="btn-login">Đăng nhập</button>
    </form>

    <div class="footer-text">
        Chưa có tài khoản? <a asp-controller="Account" asp-action="Register">Đăng ký ngay</a>
    </div>
</div>
