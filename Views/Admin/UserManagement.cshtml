@using PBL3.Models.Pagination
@model PaginatedList<PBL3.DTO.Admin.Admin_UserManagementDTO>

@{
    ViewData["Title"] = "Quản lý người dùng";
    Layout = "_AdminLayout";
    ViewBag.SelectedRole = Context.Request.Query["role"].ToString();
    ViewBag.SelectedStatus = Context.Request.Query["status"].ToString();
}

<div class="container-fluid">
    <!-- Page Title -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0"><i class="fas fa-users"></i> Quản lý người dùng</h2>
    </div>

    <!-- Filter & Search -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control" id="searchInput" name="search" value="@ViewBag.CurrentSearch" placeholder="Tìm kiếm người dùng...">
                    </div>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="roleFilter" name="role">
                        <option value="">Tất cả vai trò</option>
                        <option value="Seller" selected="@(ViewBag.SelectedRole == "Seller")">Người bán</option>
                        <option value="Buyer" selected="@(ViewBag.SelectedRole == "Buyer")">Người mua</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="statusFilter" name="status">
                        <option value="">Tất cả trạng thái</option>
                        <option value="Hoạt động" selected="@(ViewBag.SelectedStatus == "Hoạt động")">Hoạt động</option>
                        <option value="Bị cấm" selected="@(ViewBag.SelectedStatus == "Bị cấm")">Bị cấm</option>
                    </select>
                </div>                <div class="col-md-2">
                    <div class="d-flex gap-2">
                        <button class="btn btn-primary flex-grow-1" onclick="applyFilters()">
                            <i class="fas fa-filter"></i> Lọc
                        </button>
                        <button type="button" class="btn btn-outline-secondary" id="resetFilters">
                            <i class="fas fa-undo"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search Results Summary -->
    @if (!string.IsNullOrEmpty(ViewBag.CurrentSearch) || !string.IsNullOrEmpty(ViewBag.SelectedRole) || !string.IsNullOrEmpty(ViewBag.SelectedStatus))
    {
        <div class="alert alert-info mb-4">
            <div class="d-flex justify-content-between align-items-center">
                <span>
                    <i class="fas fa-info-circle me-2"></i>
                    Tìm thấy <strong>@Model.TotalPages</strong> người dùng
                    @if (!string.IsNullOrEmpty(ViewBag.CurrentSearch))
                    {
                        <span>với từ khóa "<strong>@ViewBag.CurrentSearch</strong>"</span>
                    }
                </span>
            </div>
        </div>
    }

    <!-- Users Table -->
    <div class="card">
        <div class="table-responsive">            
            <table class="table table-hover mb-0">
                <thead class="bg-light">
                    <tr>
                        <th>ID</th>
                        <th>Tên đăng nhập</th>
                        <th>Họ tên</th>
                        <th>Giới tính</th>
                        <th>Email</th>
                        <th>Số điện thoại</th>
                        <th>Vai trò</th>
                        <th>Trạng thái</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>                
                <tbody>
                    @foreach (var user in Model.Items)
                    {
                        <tr>
                            <td>@user.Id</td>
                            <td>@user.Username</td>
                            <td>@user.Name</td>
                            <td>@user.Gender</td>
                            <td>@user.Email</td>
                            <td>@user.PhoneNumber</td>                            
                            <td>
                                <span class="badge @(user.Role == "Seller" ? "bg-success" : "bg-primary")">
                                    @(user.Role == "Seller" ? "Người bán" : "Người mua")
                                </span>
                            </td>
                            <td>
                                <span class="badge @(user.Status == "Hoạt động" ? "bg-success" : "bg-danger")">
                                    @user.Status
                                </span>
                            </td>                            
                            <td>
                                <div class="btn-group">                                    <button class="btn btn-sm @(user.IsActive ? "btn-danger" : "btn-success") toggle-status-btn" 
                                            onclick="toggleUserStatus(@user.Id, '@user.Role')"
                                            title="@(user.IsActive ? "Ban Account" : "Unban Account")">
                                        <i class="fas @(user.IsActive ? "fa-ban" : "fa-unlock")"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination -->
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="javascript:void(0)" onclick="goToPage(@(Model.PageIndex - 1))">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link"><i class="fas fa-chevron-left"></i></span>
                </li>
            }

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" href="javascript:void(0)" onclick="goToPage(@i)">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="javascript:void(0)" onclick="goToPage(@(Model.PageIndex + 1))">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link"><i class="fas fa-chevron-right"></i></span>
                </li>
            }
        </ul>
    </nav>
</div>

@section Scripts {
    <script>
        function toggleUserStatus(userId, role) {
            var message = $(event.currentTarget).hasClass('btn-danger') 
                ? 'Bạn có chắc chắn muốn cấm tài khoản này?' 
                : 'Bạn có chắc chắn muốn bỏ cấm tài khoản này?';

            if (confirm(message)) {
                $.ajax({
                    url: '@Url.Action("ToggleUserStatus", "Admin")',
                    type: 'POST',
                    data: { id: userId, role: role },
                    success: function (result) {
                        if (result.success) {
                            alert(result.isActive ? 'Đã bỏ cấm tài khoản thành công!' : 'Đã cấm tài khoản thành công!');
                            window.location.reload();
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function () {
                        alert('Đã xảy ra lỗi khi thực hiện thao tác.');
                    }
                });
            }
        }        // Reset filters
        $('#resetFilters').click(function() {
            $('#searchInput').val('');
            $('#roleFilter').val('');
            $('#statusFilter').val('');
            goToPage(1);
        });

        function applyFilters() {
            goToPage(1); // Reset về trang 1 khi áp dụng bộ lọc mới
        }

        function goToPage(page) {
            const searchText = $('#searchInput').val();
            const roleFilter = $('#roleFilter').val();
            const statusFilter = $('#statusFilter').val();

            let url = '@Url.Action("UserManagement", "Admin")';
            const params = new URLSearchParams();
            
            if (searchText) {
                params.append('search', searchText);
            }
            if (roleFilter) {
                params.append('role', roleFilter);
            }
            if (statusFilter) {
                params.append('status', statusFilter);
            }
            params.append('page', page);

            const queryString = params.toString();
            if (queryString) {
                url += '?' + queryString;
            }

            window.location.href = url;
        }
    </script>
}
