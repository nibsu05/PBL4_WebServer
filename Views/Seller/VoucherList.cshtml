@model List<PBL3.DTO.Seller.Seller_DanhSachGiamGiaDTO>

@{
    ViewBag.Title = "Quản lý giảm giá";
    Layout = "~/Views/Shared/SellerLayout.cshtml";
}

@section Styles {
    <style>
        body {
            background-color: #f6f8fa;
        }

        .dashboard-card {
            background: #ffffff;
            border-radius: 12px;
            border: 1px solid #e0e0e0;
            padding: 20px;
            margin-bottom: 24px;
        }

        .dashboard-card h3 {
            font-size: 1.25rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 16px;
        }

        .table th, .table td {
            vertical-align: middle;
            font-size: 0.95rem;
        }

        .voucher-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-weight: 500;
            font-size: 0.9rem;
        }

        .status-active {
            background-color: #d4edda;
            color: #155724;
        }

        .status-expired {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-revoked {
            background-color: #fff3cd;
            color: #856404;
        }

        .btn-revoke {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 6px 12px;
            border-radius: 4px;
            font-size: 0.9rem;
        }

        .btn-revoke:hover {
            background-color: #c82333;
            color: white;
        }

        .btn-revoke:disabled {
            background-color: #e9ecef;
            color: #6c757d;
            cursor: not-allowed;
        }
    </style>
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-3">
            @Html.Partial("_SellerMenuOutsideLayout")
        </div>

        <div class="col-md-9">
            <div class="dashboard-card">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h3>Quản lý giảm giá</h3>
                    <a href="@Url.Action("CreateVoucher")" class="btn btn-primary">
                        <i class="fas fa-plus mr-1"></i> Tạo voucher mới
                    </a>
                </div>

                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success">@TempData["Success"]</div>
                }

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger">@TempData["Error"]</div>
                }

                <div class="table-responsive">
                    <table class="table table-bordered table-hover">
                        <thead class="thead-light">
                            <tr>
                                <th>Mã voucher</th>
                                <th>Giảm giá</th>
                                <th>Giảm tối đa</th>
                                <th>Số lượng</th>
                                <th>Thời gian</th>
                                <th>Trạng thái</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var voucher in Model)
                            {
                                var isExpired = voucher.EndDate < DateTime.Now;
                                var statusClass = !voucher.IsActive ? "status-revoked" : 
                                               isExpired ? "status-expired" : "status-active";
                                var statusText = !voucher.IsActive ? "Đã thu hồi" : 
                                               isExpired ? "Hết hạn" : "Đang hoạt động";
                                var canRevoke = voucher.IsActive && !isExpired;

                                <tr>
                                    <td>@voucher.VoucherId</td>
                                    <td>@voucher.PercentDiscount%</td>
                                    <td>@voucher.MaxDiscount.ToString("N0") VNĐ</td>
                                    <td>@voucher.Quantity</td>
                                    <td>@voucher.StartDate.ToString("dd/MM/yyyy") - @voucher.EndDate.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        <span class="voucher-status @statusClass">@statusText</span>
                                    </td>
                                    <td>
                                        @if (canRevoke)
                                        {
                                            <button onclick="revokeVoucher('@voucher.VoucherId')" class="btn btn-revoke">
                                                Thu hồi
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function revokeVoucher(voucherId) {
            console.log('Bắt đầu thu hồi voucher:', voucherId);
            
            if (!confirm('Bạn có chắc chắn muốn thu hồi voucher này?')) {
                console.log('Người dùng hủy thao tác');
                return;
            }

            // Lấy token từ form
            var token = $('input[name="__RequestVerificationToken"]').val();
            console.log('Token:', token ? 'Có' : 'Không');

            $.ajax({
                url: '@Url.Action("UpdateVoucherStatus")',
                type: 'POST',
                data: {
                    voucherId: voucherId,
                    isActive: false,
                    __RequestVerificationToken: token
                },
                beforeSend: function() {
                    console.log('Đang gửi request...');
                },
                success: function(response) {
                    console.log('Response:', response);
                    if (response.success) {
                        console.log('Thu hồi thành công, đang tải lại trang...');
                        location.reload();
                    } else {
                        console.error('Lỗi từ server:', response.message);
                        alert(response.message || 'Có lỗi xảy ra khi thu hồi voucher');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('AJAX Error:', {
                        status: status,
                        error: error,
                        response: xhr.responseText
                    });
                    alert('Có lỗi xảy ra khi thu hồi voucher. Vui lòng thử lại sau.');
                }
            });
        }

        // Tự động cập nhật trạng thái khi trang được tải
        $(document).ready(function() {
            console.log('Document ready');
            
            // Kiểm tra và cập nhật trạng thái của các voucher
            $('.voucher-status').each(function() {
                var row = $(this).closest('tr');
                var endDate = new Date(row.find('td:eq(4)').text().split(' - ')[1].split('/').reverse().join('-'));
                var now = new Date();
                
                if (endDate < now) {
                    console.log('Phát hiện voucher hết hạn:', row.find('td:first').text());
                    // Nếu voucher đã hết hạn và đang hoạt động, tự động cập nhật trạng thái
                    var voucherId = row.find('td:first').text();
                    var statusSpan = $(this);
                    
                    if (statusSpan.hasClass('status-active')) {
                        console.log('Tự động cập nhật trạng thái cho voucher:', voucherId);
                        $.ajax({
                            url: '@Url.Action("UpdateVoucherStatus")',
                            type: 'POST',
                            data: {
                                voucherId: voucherId,
                                isActive: false,
                                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                            },
                            success: function(response) {
                                console.log('Response:', response);
                                if (response.success) {
                                    console.log('Cập nhật thành công, đang tải lại trang...');
                                    location.reload();
                                } else {
                                    console.error('Lỗi khi cập nhật trạng thái:', response.message);
                                }
                            },
                            error: function(xhr, status, error) {
                                console.error('AJAX Error:', {
                                    status: status,
                                    error: error,
                                    response: xhr.responseText
                                });
                            }
                        });
                    }
                }
            });
        });
    </script>
}
