@model List<PBL3.DTO.Buyer.OrderDTO>
@using PBL3.Enums

@{
    Layout = "~/Views/Shared/BuyerLayout.cshtml";
    var tabs = new List<(string Label, OrdStatus? Status)>
    {
        ("T·∫•t c·∫£ ƒë∆°n", null),
        ("Ch·ªù x√°c nh·∫≠n", OrdStatus.WaitConfirm),
        ("ƒêang x·ª≠ l√Ω", OrdStatus.Pending),
        ("ƒêang v·∫≠n chuy·ªÉn", OrdStatus.Delivering),
        ("ƒê√£ giao", OrdStatus.Completed),
        ("ƒê√£ hu·ª∑", OrdStatus.Canceled)
    };

    string GetOrderStatusBadge(OrdStatus status)
    {
        return status switch
        {
            OrdStatus.WaitConfirm => "üïí Ch·ªù x√°c nh·∫≠n",
            OrdStatus.Pending => "üîÑ ƒêang x·ª≠ l√Ω",
            OrdStatus.Delivering => "üöö ƒêang v·∫≠n chuy·ªÉn",
            OrdStatus.Completed => "‚úÖ ƒê√£ giao",
            OrdStatus.Canceled => "‚ùå ƒê√£ hu·ª∑",
            _ => "Kh√¥ng x√°c ƒë·ªãnh"
        };
    }

    string GetStatusColor(OrdStatus status)
    {
        return status switch
        {
            OrdStatus.WaitConfirm => "bg-yellow-100 text-yellow-700",
            OrdStatus.Pending => "bg-blue-100 text-blue-700",
            OrdStatus.Delivering => "bg-indigo-100 text-indigo-700",
            OrdStatus.Completed => "bg-green-100 text-green-700",
            OrdStatus.Canceled => "bg-red-100 text-red-700",
            _ => "bg-gray-100 text-gray-600"
        };
    }
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>ƒê∆°n h√†ng</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>

<div class="flex">
    <!-- Sidebar -->
    <div class="w-1/4 pr-4 border-r border-gray-300">
        @Html.Partial("~/Views/Shared/_BuyerMenuLayout.cshtml")
    </div>

    <!-- Main content -->
    <div class="w-3/4 pl-4">
        <h2 class="text-2xl font-bold mb-4 text-green-700">ƒê∆°n h√†ng c·ªßa t√¥i</h2>

        <!-- Tabs -->
        <div class="flex space-x-4 mb-6 border-b border-gray-300 pb-2">
            @foreach (var tab in tabs)
            {
                var isActive = ViewBag.CurrentStatus == tab.Status;
                <a asp-action="OrderDetailHome" asp-route-status="@(tab.Status?.ToString())"
                   class="px-4 py-2 rounded-t-md text-sm font-semibold transition-all duration-200
                        @(isActive
                            ? "bg-green-700 text-white shadow-md"
                            : "text-gray-600 hover:text-green-700 hover:bg-gray-100")">
                    @tab.Label
                </a>
            }
        </div>

        <!-- Orders -->
        @if (!Model.Any())
        {
            <div class="text-gray-500 italic">Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.</div>
        }
        else
        {
            @foreach (var order in Model)
            {
                var statusBadge = GetOrderStatusBadge(order.OrderStatus);
                var statusColor = GetStatusColor(order.OrderStatus);
                var totalItems = order.OrderDetails.Sum(d => d.Quantity);

                <div class="border border-gray-300 rounded-lg p-4 mb-6 shadow hover:shadow-lg transition-shadow duration-200">
                    <!-- Header -->
                    <div class="flex justify-between items-center mb-4">
                        <div class="flex flex-col">
                            <span class="text-green-700 font-semibold">ƒê∆°n h√†ng #@order.OrderId</span>
                            <span class="text-sm text-gray-500">T·ª´ c·ª≠a h√†ng: <span class="font-medium">@order.SellerStoreName</span></span>
                            <span class="text-sm text-gray-500">Ng√†y ƒë·∫∑t: @order.OrderDate.ToString("dd/MM/yyyy")</span>
                        </div>
                        <div class="px-3 py-1 rounded-full text-sm font-medium @statusColor">
                            @statusBadge
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="border-t pt-3">
                        @foreach (var item in order.OrderDetails)
                        {
                            <div class="flex justify-between items-center mt-3">
                                <div class="flex items-center gap-3">
                                    <div class="w-14 h-14 bg-gray-100 border border-gray-300 rounded overflow-hidden flex items-center justify-center">
                                        @{
                                            var base64Image = item.Image != null
                                                ? $"data:image/jpeg;base64,{Convert.ToBase64String(item.Image)}"
                                                : null;
                                        }
                                        @if (base64Image != null)
                                        {
                                            <img src="@base64Image" alt="·∫¢nh s·∫£n ph·∫©m" class="w-full h-full object-cover" />
                                        }
                                        else
                                        {
                                            <span class="text-gray-400 text-xs">Kh√¥ng c√≥ ·∫£nh</span>
                                        }
                                    </div>
                                    <div>
                                        <div class="font-medium">@item.ProductName</div>
                                        <div class="text-sm text-gray-500">S·ªë l∆∞·ª£ng: @item.Quantity</div>
                                    </div>
                                </div>
                                <div class="text-green-700 font-semibold">@item.TotalPrice.ToString("N0") ƒë</div>
                            </div>
                        }
                    </div>

                    <!-- Footer -->
                    <div class="flex justify-between items-center mt-4 border-t pt-4">
                        <div class="text-sm text-gray-600">
                            <span class="text-lg font-semibold text-green-800">T·ªïng ti·ªÅn: @order.OrderPrice.ToString("N0") ƒë</span>
                        </div>
                        <div class="space-x-2">
                            <a asp-action="OrderDetail" asp-route-orderId="@order.OrderId"
                               class="bg-green-700 hover:bg-green-800 text-white px-4 py-2 rounded shadow">
                                Xem chi ti·∫øt
                            </a>

                            @if (order.OrderStatus == OrdStatus.WaitConfirm)
                            {
                                <form asp-action="UpdateOrderStatus" method="post" class="inline">
                                    <input type="hidden" name="orderId" value="@order.OrderId" />
                                    <input type="hidden" name="newStatus" value="Canceled" />
                                    <button type="submit"
                                            class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded shadow">
                                        Hu·ª∑ ƒë∆°n
                                    </button>
                                </form>
                            }
                            @if (order.OrderStatus == OrdStatus.Delivering)
                            {
                                <form asp-action="UpdateOrderStatus" method="post" class="inline">
                                    <input type="hidden" name="orderId" value="@order.OrderId" />
                                    <input type="hidden" name="newStatus" value="Completed" />
                                    <button type="submit"
                                            class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded shadow">
                                        X√°c nh·∫≠n ƒë√£ giao
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

</body>
</html>

