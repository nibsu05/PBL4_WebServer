@model List<PBL3.DTO.Buyer.Buyer_VoucherDTO>
@using Newtonsoft.Json
@{
    ViewBag.Title = "Ch·ªçn Voucher";
}

<h2 class="text-xl font-semibold mb-4">Voucher c·ªßa b·∫°n</h2>

@{
    var activeVouchers = Model.Where(x => x.IsActive).ToList();
}

@if (activeVouchers.Any())
{
    <div class="grid gap-4" id="voucher-selection-form">
        @foreach (var v in activeVouchers)
        {
            var voucherJson = JsonConvert.SerializeObject(v);

            <label class="border border-dashed border-green-500 bg-green-50 p-4 rounded-md shadow-sm cursor-pointer flex items-start space-x-3">
                <input type="radio"
                       name="selectedVoucher"
                       value='@Html.Raw(voucherJson)'
                       class="mt-1 accent-green-600" />
                <div>
                    <p class="text-lg font-semibold text-gray-800 mb-2">@v.Description</p>
                    <div class="text-sm text-gray-700 space-y-1">
                        <div>
                            üî• <span class="font-medium">Gi·∫£m:</span> @v.DiscountPercentage.ToString("0.00")%
                            <span class="ml-4">üéØ <span class="font-medium">T·ªëi ƒëa:</span> @v.MaxDiscount.ToString("N0") ƒë</span>
                        </div>
                        <div>
                            üßæ <span class="font-medium">K·∫øt th√∫c:</span> @v.EndDate.ToString("dd/MM/yyyy")
                        </div>
                    </div>
                </div>
            </label>
        }
    </div>

    <div class="mt-6 text-right">
        <button type="button" id="confirm-voucher-btn"
                class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition">
            Ch·ªçn voucher
        </button>
    </div>
}
else
{
    <div class="text-gray-600 italic mt-4">
        B·∫°n ch∆∞a l∆∞u voucher n√†o ho·∫∑c voucher c·ªßa b·∫°n kh√¥ng ph√π h·ª£p v·ªõi ƒë∆°n h√†ng n√†y.
    </div>
}

<script>
    // ‚ùó Chuy·ªÉn selectedVoucherData th√†nh bi·∫øn to√†n c·ª•c
    window.selectedVoucherData = null;

    document.getElementById('confirm-voucher-btn')?.addEventListener('click', function () {
        const selected = document.querySelector('input[name="selectedVoucher"]:checked');
        if (!selected) {
            alert("Vui l√≤ng ch·ªçn m·ªôt voucher!");
            return;
        }

        // L∆∞u JSON string v√†o bi·∫øn to√†n c·ª•c
        window.selectedVoucherData = selected.value;
        const selectedObj = JSON.parse(window.selectedVoucherData);

        // G√°n v√†o bi·∫øn to√†n c·ª•c ƒë·ªÉ c√°c ph·∫ßn kh√°c truy c·∫≠p
        window.selectedVoucher = selectedObj;
        console.log("Voucher ƒë√£ ch·ªçn:", window.selectedVoucher.VoucherId);

        // G√°n n·ªôi dung hi·ªÉn th·ªã n·∫øu c√≥ th·∫ª ngo√†i view ch√≠nh
        const display = document.getElementById("selected-voucher-amount");
        if (display) {
            // ‚úÖ T√¨m div t∆∞∆°ng ·ª©ng v·ªõi seller
            const orderDiv = document.querySelector(`.order-section[data-seller-id='${selectedObj.SellerId}']`);
            console.log("Order div:", orderDiv);
            let orderTotal = 0;

            if (orderDiv) {
                const totalAttr = orderDiv.getAttribute('data-order-total');
                orderTotal = parseFloat(totalAttr) || 0;
            }

            // ‚úÖ T√≠nh gi·∫£m gi√° d·ª±a tr√™n t·ªïng ƒë∆°n h√†ng c·ªßa ƒë√∫ng seller
            let discountAmount = orderTotal * (selectedObj.DiscountPercentage / 100);
            if (discountAmount > selectedObj.MaxDiscount) {
                discountAmount = selectedObj.MaxDiscount;
            }
            window.sellerDiscountMap[selectedObj.SellerId] = discountAmount;
            display.innerText = `${discountAmount.toLocaleString("vi-VN")} ƒë`;

            const discountSpan = orderDiv.querySelector(".discount-amount");
            if (discountSpan) {
                discountSpan.innerText = `${discountAmount.toLocaleString("vi-VN")} ƒë`;
            }

            const totalPriceElement = document.getElementById("total-price");
            if (totalPriceElement && window.originalTotalPrice) {
                const discount = discountAmount || 0;
                const newTotal = window.originalTotalPrice - discount;
                window.PurchaseTotal = newTotal;
                totalPriceElement.innerText = `${newTotal.toLocaleString("vi-VN")}‚Ç´`;
            }
        }
        // G·ªçi h√†m hi·ªÉn th·ªã voucher b√™n ngo√†i (n·∫øu c√≥)
        if (typeof showSelectedVoucher === 'function') {
            showSelectedVoucher(selectedObj);
        }

        // ƒê√≥ng modal
        if (typeof closeVoucherModal === 'function') {
            closeVoucherModal();
            console.log("Purchase Total:", window.PurchaseTotal);
        }
    });
</script>

