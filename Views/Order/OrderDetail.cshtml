@model PBL3.DTO.Buyer.OrderDTO
@using PBL3.Enums

@functions {
    string GetOrderStatusBadge(OrdStatus status) => status switch
    {
        OrdStatus.WaitConfirm => "üïí Ch·ªù x√°c nh·∫≠n",
        OrdStatus.Pending => "üîÑ ƒêang x·ª≠ l√Ω",
        OrdStatus.Delivering => "üöö ƒêang v·∫≠n chuy·ªÉn",
        OrdStatus.Completed => "‚úÖ ƒê√£ giao",
        OrdStatus.Canceled => "‚ùå ƒê√£ hu·ª∑",
        _ => "Kh√¥ng x√°c ƒë·ªãnh"
    };

    string GetStatusColor(OrdStatus status) => status switch
    {
        OrdStatus.WaitConfirm => "bg-yellow-100 text-yellow-700",
        OrdStatus.Pending => "bg-blue-100 text-blue-700",
        OrdStatus.Delivering => "bg-indigo-100 text-indigo-700",
        OrdStatus.Completed => "bg-green-100 text-green-700",
        OrdStatus.Canceled => "bg-red-100 text-red-700",
        _ => "bg-gray-100 text-gray-600"
    };
}

@{
    ViewData["Title"] = $"Chi ti·∫øt ƒë∆°n h√†ng #{Model.OrderId}";
    Layout = "~/Views/Shared/BuyerLayout.cshtml";
    var subtotal = Model.OrderDetails.Sum(p => p.TotalPrice);
    var shippingFee = 22000;
    var discount = Model.Discount;
    var total = Model.OrderPrice;
    var statusBadge = GetOrderStatusBadge(Model.OrderStatus);
    var statusColor = GetStatusColor(Model.OrderStatus);
}

<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<style>
    .theme-green-bg { background-color: #219150; color: #fff }
    .theme-green-text { color: #219150; }
    .hover-theme-green-bg:hover { background-color: #1e7f47; color: #fff }
    .product-image { width: 80px; height: 80px; object-fit: cover; border-radius: 0.375rem; }
    .btn-green {
        background-color: #219150;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        font-weight: 500;
        transition: background-color 0.2s;
    }
    .btn-green:hover {
        background-color: #1e7f47;
    }
     .modal {
            display: none;
            position: fixed;
            z-index: 999;
            padding-top: 60px;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fff;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            border-radius: 8px;
            width: 90%;
            max-width: 600px;
            position: relative;
        }

        .close-btn {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

</style>

<div class="flex gap-6">
    <div class="w-1/5 pr-4 border-r border-gray-200">
        @Html.Partial("~/Views/Shared/_BuyerMenuLayout.cshtml")
    </div>
    <div class="flex-1 p-6 bg-white rounded-lg shadow-md">
        <h2 class="text-2xl font-semibold theme-green-text mb-2">
            Chi ti·∫øt ƒë∆°n h√†ng #@Model.OrderId
            <span class="ml-4 px-3 py-1 text-sm font-medium rounded @statusColor">
                @statusBadge
            </span>
        </h2>
        <div class="text-gray-600 mb-4">Ng√†y ƒë·∫∑t h√†ng: @Model.OrderDate.ToString("HH:mm dd/MM/yyyy")</div>

        <div class="grid grid-cols-3 gap-4 mb-6">
            <div class="bg-gray-50 p-4 rounded border">
                <h3 class="font-semibold mb-2">ƒê·ªäA CH·ªà NG∆Ø·ªúI NH·∫¨N</h3>
                <p><strong>@Model.BuyerName</strong></p>
                <p>@Model.Address</p>
                <p>ƒêi·ªán tho·∫°i: @Model.BuyerPhone</p>
            </div>
            <div class="bg-gray-50 p-4 rounded border">
                <h3 class="font-semibold mb-2">H√åNH TH·ª®C GIAO H√ÄNG</h3>
                <p>Ph√≠ v·∫≠n chuy·ªÉn: 22.000‚Ç´</p>

                @if (Model.DeliveryDate == new DateTime(0001, 1, 1))
                {
                    var estimatedDate = Model.OrderDate.AddDays(5);
                    <p>Ng√†y nh·∫≠n d·ª± ki·∫øn: @estimatedDate.ToString("dd/MM/yyyy")</p>
                }
                else
                {
                    <p>Ng√†y nh·∫≠n: @Model.DeliveryDate.ToString("dd/MM/yyyy")</p>
                }
            </div>
            <div class="bg-gray-50 p-4 rounded border">
                <h3 class="font-semibold mb-2">H√åNH TH·ª®C THANH TO√ÅN</h3>
                <p>@(Model.PaymentMethod ==PayMethod.WalletPayment ? "Thanh to√°n b·∫±ng v√≠ ƒëi·ªán t·ª≠" : "Thanh to√°n khi nh·∫≠n h√†ng")</p>
            </div>
        </div>

        <div class="mb-6">
            <table class="w-full text-sm border">
                <thead class="bg-gray-100 text-left">
                    <tr>
                        <th class="p-3">S·∫£n ph·∫©m</th>
                        <th class="p-3">Gi√°</th>
                        <th class="p-3">S·ªë l∆∞·ª£ng</th>
                        <th class="p-3">T·∫°m t√≠nh</th>
                        <th class="p-3"></th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.OrderDetails)
                {
                    var unitPrice = item.Quantity > 0 ? item.TotalPrice / item.Quantity : 0;
                    bool canReturn = Model.OrderStatus == OrdStatus.Completed && DateTime.Now <= Model.DeliveryDate.AddDays(7);
                    bool canComment = Model.OrderStatus == OrdStatus.Completed;
                    <tr class="border-t">
                        <td class="p-3 flex items-center gap-4">
                            <img src="@(item.Image != null ? $"data:image/png;base64,{Convert.ToBase64String(item.Image)}" : Url.Content("~/images/no-image.jpg"))" alt="·∫¢nh s·∫£n ph·∫©m" class="product-image border" />
                            <div>
                                <div class="font-semibold">@item.ProductName</div>
                                <div class="text-gray-500 text-xs">MSP: @item.ProductId</div>
                            </div>
                        </td>
                        <td class="p-3">@unitPrice.ToString("N0") ‚Ç´</td>
                        <td class="p-3">@item.Quantity</td>
                        <td class="p-3">@item.TotalPrice.ToString("N0") ‚Ç´</td>
                        <td class="p-3">
                            @if (canComment)
                            {
                                <button class="btn-green" onclick="openCreateReview(@item.ProductId)">Vi·∫øt ƒë√°nh gi√°</button>
                            }
                            @if (canReturn)
                            {
                                <a href="@Url.Action("AddReturnExchange", "Buyer", new { productId = item.ProductId, orderId = Model.OrderId })"
                                class="btn-green">Tr·∫£ h√†ng</a>
                            }
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="w-full md:w-2/3 ml-auto bg-gray-50 p-4 rounded border">
            <div class="flex justify-between mb-2">
                <span>T·∫°m t√≠nh:</span>
                <span>@subtotal.ToString("N0") ‚Ç´</span>
            </div>
            <div class="flex justify-between mb-2">
                <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
                <span>@shippingFee.ToString("N0") ‚Ç´</span>
            </div>
            <div class="flex justify-between mb-2">
                <span>Gi·∫£m gi√°:</span>
                <span>@discount.ToString("N0") ‚Ç´</span>
            </div>
            <div class="flex justify-between font-semibold text-red-600 border-t pt-2 mt-2 text-lg">
                <span>T·ªïng c·ªông:</span>
                <span>@total.ToString("N0") ‚Ç´</span>
            </div>
        </div>
    </div>
</div>
<div class="flex gap-6">
    <div id="createReviewModal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeModal()">&times;</span>
            <div id="modal-body"></div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/review-add.js"></script>
    <script>
        function openCreateReview(productId) {
            $.get('@Url.Action("WriteComment","Buyer")', { productId: productId }, function (data) {
                $('#modal-body').html(data);
                $('#createReviewModal').fadeIn();
                initCreateReviewModal();
            });
        }

        function closeModal() {
            $('#createReviewModal').fadeOut();
            $('#modal-body').html('');
        }
    </script>
</div>