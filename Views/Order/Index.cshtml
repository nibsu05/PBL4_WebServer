@model List<PBL3.DTO.Buyer.OrderDTO>
@{
    ViewBag.Title = "Đơn hàng";
    Layout = "~/Views/Shared/BuyerLayout.cshtml";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đơn Hàng</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* Custom class for the green color from the second image (emerald/teal) */
        .theme-green-bg { background-color: #219150; color: #fff} /* Tailwind emerald-500 */
        .theme-green-border { border-color: #219150; color: #fff}
        .theme-green-text { color: #219150; }
        .hover-theme-green-bg:hover { background-color: #219150; color: #fff} /* Tailwind emerald-600 */

        /* Style for quantity input to prevent browser default spinners if desired */
        input[type='number']::-webkit-inner-spin-button,
        input[type='number']::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        input[type='number'] {
            -moz-appearance: textfield; /* Firefox */
        }
        .quantity-btn {
            min-width: 2.5rem; /* 40px */
            height: 2.5rem; /* 40px */
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .quantity-input-el {
             height: 2.5rem; /* 40px */
        }
        .product-image {
            width: 80px;
            height: 80px;
            object-fit: cover; /* Ensures image covers the area without distortion */
            border-radius: 0.375rem; /* rounded-md */
        }
        /* Ensure checkboxes use the theme color */
        .form-checkbox {
            color: #219150; /* emerald-500 */
            color: #fff
        }
        .form-checkbox:focus {
            --tw-ring-color: rgb(16 185 129 / 0.5); /* emerald-500 with opacity */
        }
        .status-paid { background-color: #d1fae5; color: #065f46; } /* green-100, green-800 */
        .status-unpaid { background-color: #fee2e2; color: #991b1b; } /* red-100, red-800 */
        .status-processing { background-color: #ffedd5; color: #9a3412; } /* orange-100, orange-800 */
        .status-shipped { background-color: #dbeafe; color: #1e40af; } /* blue-100, blue-800 */
        .status-delivered { background-color: #d1fae5; color: #065f46; } /* green-100, green-800 */
        .status-cancelled { background-color: #f3f4f6; color: #4b5563; } /* gray-100, gray-600 */
    </style>
</head>
<body>
    <div class="container mx-auto max-w-7xl">
        <h1 class="text-3xl font-semibold mb-6 text-gray-800">ĐƠN HÀNG</h1>

        <div class="flex flex-col lg:flex-row gap-8">
            <div class="lg:w-2/3 w-full space-y-6">
                <div class="bg-white rounded-lg shadow p-4">
                    <div class="flex justify-between items-center">
                        <div>
                            <input type="checkbox" id="selectAllProductsGlobal" class="form-checkbox h-5 w-5 rounded focus:ring-2 focus:ring-offset-0"/>
                            <label for="selectAllProductsGlobal" class="ml-3 text-gray-700 font-medium align-middle">
                                Tất cả (<span id="globalProductCount">@Model.Count()</span> đơn hàng)
                            </label>
                        </div>
                        <div class="hidden md:flex space-x-4 items-center text-sm text-gray-500">
                            <span class="w-24 text-center">Trạng thái</span>
                            <span class="w-32 text-center">Ngày đặt</span>
                            <span class="w-24 text-center">Tổng tiền</span>
                            <span class="w-10 text-center">Chi tiết</span>
                        </div>
                    </div>
                </div>

                @if (Model == null || !Model.Any())
                {
                    <div class="bg-white rounded-lg shadow p-10 text-center">
                        <i class="fas fa-shopping-cart fa-3x text-gray-300 mb-4"></i>
                        <p class="text-gray-600 text-xl mb-2">Bạn chưa có đơn hàng nào.</p>
                        <p class="text-gray-500 mb-6">Hãy mua sắm để tạo đơn hàng mới!</p>
                        <a href="/" class="theme-green-bg hover-theme-green-bg text-white font-semibold py-2.5 px-6 rounded-lg transition duration-200 ease-in-out">
                            Tiếp tục mua sắm
                        </a>
                    </div>
                }
                else
                {
                    foreach (var order in Model)
                    {
                        <div class="bg-white rounded-lg shadow order-block">
                            <div class="p-4 border-b border-gray-200 flex items-center space-x-3 bg-gray-50 rounded-t-lg">
                                <input type="checkbox" id="selectOrder_@order.OrderId" class="form-checkbox h-5 w-5 rounded focus:ring-2 focus:ring-offset-0 order-checkbox" data-orderid="@order.OrderId"/>
                                <label for="selectOrder_@order.OrderId" class="font-semibold theme-green-text hover:text-emerald-700 cursor-pointer text-lg">
                                    Đơn hàng #@order.OrderId
                                </label>
                            </div>

                            <div class="divide-y divide-gray-200">
                                <div class="p-4 flex flex-col md:flex-row md:items-center space-y-4 md:space-y-0 md:space-x-2 order-item" data-orderid="@order.OrderId">
                                    <div class="flex items-center w-full md:w-2/5 lg:w-3/5">
                                        <div class="ml-4 flex-grow">
                                            <h3 class="font-medium text-gray-800 hover:theme-green-text transition-colors">@order.SellerStoreName</h3>
                                            <div class="md:hidden mt-2">
                                                <span class="text-sm text-gray-500">Ngày đặt: @order.OrderDate.ToString("dd/MM/yyyy HH:mm")</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="hidden md:block md:w-24 text-center">
                                        <span class="px-2 py-1 text-xs font-semibold rounded-full
                                            @(order.OrderStatus.ToString().ToLower() == "delivered" ? "status-delivered" :
                                              order.OrderStatus.ToString().ToLower() == "shipped" ? "status-shipped" :
                                              order.OrderStatus.ToString().ToLower() == "processing" ? "status-processing" :
                                              order.OrderStatus.ToString().ToLower() == "cancelled" ? "status-cancelled" : "bg-gray-200 text-gray-700")">
                                            @order.OrderStatus.ToString()
                                        </span>
                                    </div>

                                    <div class="w-full md:w-32 flex items-center justify-start md:justify-center">
                                        <span class="md:hidden font-semibold mr-2 text-sm">Ngày đặt: </span>
                                        <span class="text-sm text-gray-500">@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</span>
                                    </div>

                                    <div class="w-full md:w-24 text-left md:text-center">
                                        <span class="md:hidden font-semibold text-sm">Tổng tiền: </span>
                                        <span class="font-semibold theme-green-text">
                                            @order.OrderPrice.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))₫
                                        </span>
                                    </div>

                                    <div class="w-full md:w-10 text-right md:text-center">
                                        <a href="@Url.Action("Details", "Order", new { id = order.OrderId })" class="text-gray-400 hover:text-emerald-500 transition duration-200 p-2" title="Xem chi tiết">
                                            <i class="fas fa-eye fa-lg"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="lg:w-1/3 w-full">
                <div class="bg-white rounded-lg shadow p-6 sticky top-8">
                    <h2 class="text-xl font-semibold text-gray-800 border-b border-gray-200 pb-4 mb-4">Thống kê</h2>

                    <div class="space-y-2 mb-4">
                        <div class="flex justify-between text-gray-700">
                            <span>Tổng số đơn hàng</span>
                            <span class="font-medium">@Model.Count()</span>
                        </div>
                        <div class="flex justify-between text-gray-700">
                            <span>Đơn hàng đã thanh toán</span>
                            <span class="font-medium">@Model.Count(o => o.PaymentStatus)</span>
                        </div>
                    </div>
                    <hr class="my-4 border-gray-200">
                    <div class="flex justify-between font-semibold text-lg text-gray-800 mb-1">
                        <span>Tổng chi tiêu</span>
                        <span class="text-red-600">@Model.Sum(o => o.OrderPrice).ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))₫</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function () {
        initializeCheckboxStates();

        const selectAllGlobalCheckbox = document.getElementById('selectAllProductsGlobal');
        if (selectAllGlobalCheckbox) {
            selectAllGlobalCheckbox.addEventListener('change', function () {
                document.querySelectorAll('.order-checkbox').forEach(cb => {
                    cb.checked = this.checked;
                });
            });
        }

        document.querySelectorAll('.order-checkbox').forEach(orderCb => {
            orderCb.addEventListener('change', function() {
                checkGlobalSelectAllState();
            });
        });
    });
    
    function initializeCheckboxStates() {
        checkGlobalSelectAllState();
    }

    function checkGlobalSelectAllState() {
        const selectAllCheckbox = document.getElementById('selectAllProductsGlobal');
        if (!selectAllCheckbox) return;

        const allCheckboxes = document.querySelectorAll('.order-checkbox');
        const checkedCheckboxes = document.querySelectorAll('.order-checkbox:checked');
        
        selectAllCheckbox.checked = allCheckboxes.length > 0 && allCheckboxes.length === checkedCheckboxes.length;
    }
    </script>
</body>
</html>
